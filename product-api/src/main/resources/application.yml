server:
  port: ${PORT:8081}

spring:
  main:
    #allow-circular-references: true # permite referencias circulares
    allow-bean-definition-overriding: true # permite usar criar um bean de um serviço interno do próprio spring

  application:
    name: product-api

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/product-db
    username: admin
    password: 123456
    initialize: true
    maxActive: 3


#    Setando rabbitMQ "Globalmente"
    rabbitmq:
      host: ${RABBIT_MQ_HOST:localhost}
      port: ${RABBIT_MQ_PORT:5672}
      username: ${RABBIT_MQ_USER:guest}
      password: ${RABBIT_MQ_PASSWORD:guest}

  sql:
    init:
      mode:
      continue-on-error: true
      platform: postgresql

  jpa:
    hibernate:
      ddl-auto: create-drop #desabilitar o ddl-auto em caso de ambiente de produção. Pq ele sempre dropa a tabela quando a aplicação é parada.
      format_sql: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect #Precisei rodar um dialeto mais atual, a versão 9 não estava funcionando.

# Aqui em baixo estarão coisas que são configuradas manualmente e localmente.
app-config:
  secrets:
    api-secret: ${API_SECRET:YXV0aC1hcGktc2VjcmV0LWRldi0xMjM0NTY=}

    services:
      sales: http://${SALES_HOST:localhost}:${SALES_PORT:8082}

  rabbit:
    exchange:
      product: product.topic

    routingKey:
      product-stock: product-stock-update.routingKey
      sales-confirmation: sales-confirmation.routingKey

      queue:
        product-stock: product-stock-update.queue
        sales-confirmation: sales-confirmation.queue
